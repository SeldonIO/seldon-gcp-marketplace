apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-tester"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
  annotations:
    helm.sh/hook: test-success
spec:
  serviceAccountName: {{ .Release.Name }}-serviceaccount-name
  containers:
  - name: tester
    image: "{{ .Values.tester.image }}"
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    volumeMounts:
    - name: config-volume
      mountPath: /tester
    command: ["bash"]
    args: ["/tester/run.sh"]
  restartPolicy: Never
  volumes:
  - name: config-volume
    configMap:
      name: "{{ .Release.Name }}-test"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-test"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
  annotations:
    marketplace.cloud.google.com/verification: test
data:
  run.sh: |-
    set -x
    curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
    chmod +x ./kubectl
    ./kubectl create -f /tester/model.yaml
    sleep 5
    ./kubectl rollout status deploy.apps/$(./kubectl get deploy.apps -l seldon-deployment-id=rest-seldon -o jsonpath='{.items[0].metadata.name}')
    sleep 3
    http_status_code=$(curl -o /dev/null -s -w "%{http_code}\n" http://rest-seldon-model.${NAMESPACE}:8000/api/v1.0/predictions -d '{"data": {"ndarray":[[1.0, 2.0, 5.0]]}}' -H "Content-Type: application/json")
    echo "Expected http status code: 200"
    echo "Actual http status code: $http_status_code"
    if [[ "$http_status_code" == "200" ]]; then
      echo SUCCESS
      ./kubectl delete -f /tester/model.yaml
    else
      echo FAILURE
      ./kubectl delete -f /tester/model.yaml
      exit 1
    fi
  model.yaml: |-
    apiVersion: machinelearning.seldon.io/v1
    kind: SeldonDeployment
    metadata:
      name: rest-seldon
    spec:
      name: restseldon
      protocol: seldon
      transport: rest  
      predictors:
      - componentSpecs:
        - spec:
            containers:
            - image: seldonio/mock_classifier_rest:1.3
              name: classifier
        graph:
          name: classifier
          type: MODEL
        name: model
        replicas: 1
